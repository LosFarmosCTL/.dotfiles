#
# GENERAL
#

# kitty -- FIX: does not work
lalt - return                                           : pgrep -f kitty > /dev/null && osascript -e 'tell application "System Events" to tell process "kitty"\n click menu item "New OS Window" of menu "Shell" of menu bar 1\n end tell' || open -a "/Applications/kitty.app"

#
# YABAI INTEGRATION
#

:: default                                              : yabai -m window --toggle border
:: warp                                                 : yabai -m window --toggle border
:: resize                                               : yabai -m window --toggle border
:: spaces                                               : yabai -m window --toggle border


# mode switches
warp, resize, spaces < escape ; default
lalt - w                                                ; warp
lalt - r                                                ; resize
lalt - s                                                ; spaces


## RESTART YABAI
lalt + shift - r                                        : brew services restart yabai && osascript -e 'tell application "UÌˆbersicht" to refresh widget id "simple-bar-spaces-jsx"'

## WINDOWS


# windows -- focus
lalt - h                                                : yabai -m window --focus west
lalt - j                                                : yabai -m window --focus south
lalt - k                                                : yabai -m window --focus north
lalt - l                                                : yabai -m window --focus east

# windows -- swap
lalt + lshift - h                                       : yabai -m window --swap west
lalt + lshift - j                                       : yabai -m window --swap south
lalt + lshift - k                                       : yabai -m window --swap north
lalt + lshift - l                                       : yabai -m window --swap east

# windows -- warp
warp < lalt - h                                         : yabai -m window --warp west && skhd --key escape #toggle back to default mode using simulated esc key press
warp < lalt - j                                         : yabai -m window --warp south && skhd --key escape
warp < lalt - k                                         : yabai -m window --warp north && skhd --key escape
warp < lalt - l                                         : yabai -m window --warp east && skhd --key escape

# windows -- resize (if expanding fails, shrink the window starting from the opposite edge)
resize < lalt - h                                       : yabai -m window --resize left:-15:0 || yabai -m window --resize right:-15:0
resize < lalt - j                                       : yabai -m window --resize bottom:0:15 || yabai -m window --resize top:0:15
resize < lalt - k                                       : yabai -m window --resize top:0:-15 || yabai -m window --resize bottom:0:-15
resize < lalt - l                                       : yabai -m window --resize right:15:0 || yabai -m window --resize left:15:0

# windows -- split ratios (keycodes correspond to numpad keys)
lalt - 0x53                                             : yabai -m window --ratio abs:0.1
lalt - 0x54                                             : yabai -m window --ratio abs:0.2
lalt - 0x55                                             : yabai -m window --ratio abs:0.3
lalt - 0x56                                             : yabai -m window --ratio abs:0.4
lalt - 0x57                                             : yabai -m window --ratio abs:0.5
lalt - 0x58                                             : yabai -m window --ratio abs:0.6
lalt - 0x59                                             : yabai -m window --ratio abs:0.7
lalt - 0x5B                                             : yabai -m window --ratio abs:0.8
lalt - 0x5C                                             : yabai -m window --ratio abs:0.9

# windows -- move between spaces
spaces < lalt - l                                       : set window (yabai -m query --windows --window | jq .id) && \
                                                            set space (yabai -m query --spaces --space next | jq .index) && \
                                                            yabai -m space --focus next && yabai -m window $window --space $space && yabai -m window --focus $window

spaces < lalt - h                                       : set window (yabai -m query --windows --window | jq .id) && \
                                                            set space (yabai -m query --spaces --space prev | jq .index) && \
                                                            yabai -m space --focus prev && yabai -m window $window --space $space && yabai -m window --focus $window

spaces < lalt - j                                       : set window (yabai -m query --windows --window | jq .id) && \
                                                            set space (yabai -m query --spaces --display | jq .\[-1\].index) && \
                                                            yabai -m space --focus $space && yabai -m window $window --space $space && yabai -m window --focus $window

spaces < lalt - k                                       : set window (yabai -m query --windows --window | jq .id) && \
                                                            set space (yabai -m query --spaces --display | jq .\[0\].index) && \
                                                            yabai -m space --focus $space && yabai -m window $window --space $space && yabai -m window --focus $window

# windows -- move to new space
spaces < lalt + shift - l                               : yabai -m space --create && \
                                                            set window (yabai -m query --windows --window | jq .id) && \
                                                            set createdSpace (yabai -m query --spaces --display | jq .\[-1\].index) && \
                                                            set targetSpace (yabai -m query --spaces --space next | jq .index) && \
                                                            yabai -m space $createdSpace --move $targetSpace; \
                                                            yabai -m space --focus $targetSpace && \
                                                            yabai -m window $window --space $targetSpace && \
                                                            yabai -m window --focus $window

spaces < lalt + shift - h                               : yabai -m space --create && \
                                                            set window (yabai -m query --windows --window | jq .id) && \
                                                            set createdSpace (yabai -m query --spaces --display | jq .\[-1\].index) && \
                                                            set targetSpace (yabai -m query --spaces --space | jq .index) && \
                                                            yabai -m space $createdSpace --move $targetSpace && \
                                                            yabai -m space --focus $targetSpace && \
                                                            yabai -m window $window --space $targetSpace && \
                                                            yabai -m window --focus $window

spaces < lalt + shift - j                               : yabai -m space --create && \
                                                            set window (yabai -m query --windows --window | jq .id) && \
                                                            set createdSpace (yabai -m query --spaces --display | jq .\[-1\].index) && \
                                                            yabai -m space --focus $createdSpace && \
                                                            yabai -m window $window --space $createdSpace && \
                                                            yabai -m window --focus $window

spaces < lalt + shift - k                               : yabai -m space --create && \
                                                            set window (yabai -m query --windows --window | jq .id) && \
                                                            set createdSpace (yabai -m query --spaces --display | jq .\[-1\].index) && \
                                                            set targetSpace (yabai -m query --spaces --display | jq .\[0\].index) && \
                                                            yabai -m space $createdSpace --move $targetSpace && \
                                                            yabai -m space --focus $targetSpace && \
                                                            yabai -m window $window --space $targetSpace && \
                                                            yabai -m window --focus $windowabai -m space --create && \

# HACK: skhd has no built in way of switching modes after a keypress so we just use a simulated esc keypress to get back to default mode
spaces < lalt - 1                                       : yabai -m window --space 1 && yabai -m space --focus 1 && skhd --key escape
spaces < lalt - 2                                       : yabai -m window --space 2 && yabai -m space --focus 2 && skhd --key escape
spaces < lalt - 3                                       : yabai -m window --space 3 && yabai -m space --focus 3 && skhd --key escape
spaces < lalt - 4                                       : yabai -m window --space 4 && yabai -m space --focus 4 && skhd --key escape
spaces < lalt - 5                                       : yabai -m window --space 5 && yabai -m space --focus 5 && skhd --key escape
spaces < lalt - 6                                       : yabai -m window --space 6 && yabai -m space --focus 6 && skhd --key escape
spaces < lalt - 7                                       : yabai -m window --space 7 && yabai -m space --focus 7 && skhd --key escape
spaces < lalt - 8                                       : yabai -m window --space 8 && yabai -m space --focus 8 && skhd --key escape
spaces < lalt - 9                                       : yabai -m window --space 9 && yabai -m space --focus 9 && skhd --key escape

#windows -- move between displays
lalt + shift - d                                        : yabai -m window --display next || yabai -m window --display first;\
                                                            yabai -m display --focus next || yabai -m display --focus first

# windows -- zoom
lalt - z                                                : yabai -m window --toggle zoom-fullscreen
lalt + shift - z                                        : yabai -m window --toggle zoom-parent

# windows -- general
lalt - v                                                : yabai -m window --toggle split # toggle between vertical/horizontal split
lalt - space                                            : yabai -m window --toggle float # float/unfloat window
lalt + lshift - s                                       : yabai -m window --toggle sticky && yabai -m window --toggle topmost && yabai -m window --toggle border # make window sticky (appears on all spaces)
lalt - q                                                : yabai -m window --close # close the current window
lalt - b                                                : yabai -m window --toggle border # toggle window border manually
default, spaces < lalt - c                              : set window (yabai -m query --windows --space | jq .\[0\].id) && \
                                                            yabai -m window --focus $window


## SPACES

# spaces -- focus  HACK: sometimes there is no window focused after switching spaces, in that case we just focus the first window in the space
lctrl + lalt - l                                        : yabai -m space --focus next && \
                                                            set focusedWindow (yabai -m query --windows --space | jq '.[] | select(.["has-focus"] == true)') && \
                                                            if not test -n "$focusedWindow"; \
                                                                set window (yabai -m query --windows --space | jq .\[0\].id) && \
                                                                yabai -m window --focus $window; \
                                                            end
lctrl + lalt - h                                        : yabai -m space --focus prev && \
                                                            set focusedWindow (yabai -m query --windows --space | jq '.[] | select(.["has-focus"] == true)') && \
                                                            if not test -n "$focusedWindow"; \
                                                                set window (yabai -m query --windows --space | jq .\[0\].id) && \
                                                                yabai -m window --focus $window; \
                                                            end
lctrl + lalt - j                                        : yabai -m space --focus first && \
                                                            set focusedWindow (yabai -m query --windows --space | jq '.[] | select(.["has-focus"] == true)') && \
                                                            if not test -n "$focusedWindow"; \
                                                                set window (yabai -m query --windows --space | jq .\[0\].id) && \
                                                                yabai -m window --focus $window; \
                                                            end
lctrl + lalt - k                                        : yabai -m space --focus last && \
                                                            set focusedWindow (yabai -m query --windows --space | jq '.[] | select(.["has-focus"] == true)') && \
                                                            if not test -n "$focusedWindow"; \
                                                                set window (yabai -m query --windows --space | jq .\[0\].id) && \
                                                                yabai -m window --focus $window; \
                                                            end

# spaces -- move  HACK: yabai does not send a signal after moving spaces around so we have to tell ÌˆÌˆUÌˆbersicht to refresh manually
lctrl + lalt + lshift - l                               : yabai -m space --move next && osascript -e 'tell application "UÌˆbersicht" to refresh widget id "simple-bar-spaces-jsx"'
lctrl + lalt + lshift - h                               : yabai -m space --move prev && osascript -e 'tell application "UÌˆbersicht" to refresh widget id "simple-bar-spaces-jsx"'
lctrl + lalt + lshift - j                               : yabai -m space --move last && osascript -e 'tell application "UÌˆbersicht" to refresh widget id "simple-bar-spaces-jsx"'
lctrl + lalt + lshift - k                               : yabai -m space --move first && osascript -e 'tell application "UÌˆbersicht" to refresh widget id "simple-bar-spaces-jsx"'

# spaces -- general
lalt - 0                                                : yabai -m space --balance # balance space split ratios
lalt + shift - q                                        : yabai -m space --destroy # delete current space

# spaces -- toggle between managed and float
lalt + lshift - space                                   : set mode (yabai -m query --spaces --space | jq .type) && \
                                                            if [ $mode = "\"bsp\"" ]; \
                                                                yabai -m space --layout float; \
                                                            else; \
                                                                yabai -m space --layout bsp; \
                                                            end


##DISPLAYS

# displays -- focus
lalt - d                                                : yabai -m display --focus next || yabai -m display --focus first
